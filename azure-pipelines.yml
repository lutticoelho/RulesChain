# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- pipeline

pool:
  vmImage: 'windows-latest'

variables:
  Major: '0'
  Minor: '1'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- script: echo Starting Release Build!
  displayName: 'Starting Release'

- task: NuGetCommand@2
  displayName: 'Restore'
  inputs:
    command: restore
    packagesToPack: '**/*.csproj'
    
- task: DotNetCoreCLI@2
  displayName: 'Run dotnet build $(buildConfiguration)'
  inputs:
    command: build
    arguments: --configuration $(buildConfiguration)

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
     **\bin\**\*Test*.dll
     !**\obj\**
     !**\*testadapter.dll
    codeCoverageEnabled: true
    testRunTitle: '$(Build.DefinitionName) | $(Build.Reason) |$(Build.SourceVersion)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PublishTestResults@2
  inputs:
    testRunner: VSTest
    testResultsFiles: '**\*.trx'

- task: DotNetCoreCLI@2
  displayName: 'Pack the package $(Major).$(Minor).$(Build.BuildId)'
  inputs:
    command: 'pack'
    configuration: '$(configuration)'
    packagesToPack: '**\*.csproj'
    majorVersion: '$(Major)'
    minorVersion: '$(Minor)'
    patchVersion: '$(Build.BuildId)'
    verbosityPack: 'Detailed'


# - task: NuGetCommand@2
#   displayName: nuget pack
#   inputs:
#     command: 'pack'

- task: PublishBuildArtifacts@1
  displayName: 'Publish the package'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# - task: NuGetCommand@2
#   displayName: nuget push
#   inputs:
#     command: 'push'
#     packagesToPush: '**\*.nupkg'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: '$(nuget.key)'
#     verbosityPush: 'Detailed'
#     configuration: '$(BuildConfiguration)'

# - task: PublishBuildArtifacts@1
#   displayName: publish artifacts
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'

# - task: PowerShell@2
#   displayName: dotnet nuget push variables['Build.SourceBranch']
#   inputs:
#     targetType: 'inline'
#     script: 'nuget push $(Build.ArtifactStagingDirectory)\**\*.nupkg -ApiKey $(nuget.key) -Source https:\/api.nuget.org/v3/index.json -NoServiceEndpoint -NonInteractive true -Verbosity detailed'

