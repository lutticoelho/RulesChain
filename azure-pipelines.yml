# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- bugfix/master/azure-pipeline-version

pool:
  vmImage: 'windows-latest'

variables:
  Major: '1'
  Minor: '0'
  PackVersion: '$(Major).$(Minor).$(Patch)'
  FullVersion: '$(Major).$(Minor).$(Patch).$(Build.BuildId)'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
  - job: 'Build & Test'
    steps:
    - script: echo Starting Release Build!
      displayName: 'Starting Release'

    - task: NuGetCommand@2
      displayName: 'Restore'
      inputs:
        command: restore
        packagesToPack: '**/*.csproj'
        
    - task: DotNetCoreCLI@2
      displayName: 'Run dotnet build $(FullVersion) $(buildConfiguration)'
      inputs:
        command: build
        arguments: --configuration $(buildConfiguration) --version $(PackVersion)

    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
        **\bin\**\*Test*.dll
        !**\obj\**
        !**\*testadapter.dll
        codeCoverageEnabled: true
        testRunTitle: '$(Build.DefinitionName) | $(Build.Reason) |$(Build.SourceVersion)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PublishTestResults@2
      inputs:
        testRunner: VSTest
        testResultsFiles: '**\*.trx'


  - job: 'Pack & Push'
    dependsOn: 'Build & Test'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Pack the package $(PackVersion)'
      inputs:
        command: 'pack'
        configuration: '$(configuration)'
        packagesToPack: '**\*.csproj'
        versioningScheme: 'byEnvVar'
        versionEnvVar: 'PackVersion'
        verbosityPack: 'Detailed'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish the package'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: PowerShell@2
      displayName: nuget push $(Build.SourceBranch)
      inputs:
        targetType: 'inline'
        script: 'nuget push $(Build.ArtifactStagingDirectory)\**\*.nupkg -ApiKey $(nuget.key) -Source https://api.nuget.org/v3/index.json -NoServiceEndpoint -NonInteractive true -Verbosity detailed'

